{
    "pages": [
        {
            "name": "AWS DynamoDB",
            "description": "",
            "widgets": [
                {
                    "visualization": {
                        "id": "viz.line"
                    },
                    "layout": {
                        "column": 1,
                        "row": 1,
                        "height": 3,
                        "width": 8
                    },
                    "title": "Request Latency, by Operation",
                    "rawConfiguration": {
                        "nrqlQueries": [
                            {
                                "accountId": 0,
                                "query": "SELECT average(`aws.dynamodb.SuccessfulRequestLatency.get`) as 'GetItem',average(`aws.dynamodb.SuccessfulRequestLatency.put`) as 'PutItem', average(`aws.dynamodb.SuccessfulRequestLatency.delete`) as 'DeleteItem',average(`aws.dynamodb.SuccessfulRequestLatency.update`) as 'UpdateItem',average(`aws.dynamodb.SuccessfulRequestLatency.query`) as 'Query',average(`aws.dynamodb.SuccessfulRequestLatency.scan`) as 'Scan',average(`aws.dynamodb.SuccessfulRequestLatency.batchGet`) as 'BatchGetItem',average(`aws.dynamodb.SuccessfulRequestLatency.batchWrite`) as 'BatchWriteItem' from Metric WHERE collector.name='cloudwatch-metric-streams' since yesterday TIMESERIES 30 minutes"
                            }
                        ]
                    }
                },
                {
                    "visualization": {
                        "id": "viz.markdown"
                    },
                    "layout": {
                        "column": 9,
                        "row": 1,
                        "height": 6,
                        "width": 4
                    },
                    "rawConfiguration": {
                        "text": ":::beyond\n![Amazon DynamoDB Icon](https://integrations.nr-assets.net/providers/aws_dynamodb.png) **Amazon DynamoDB** \n\nAmazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database, so that you don't have to worry about hardware provisioning, setup and configuration, replication, software patching, or cluster scaling.\n\n\n\n\n:::"
                    }
                },
                {
                    "visualization": {
                        "id": "viz.billboard"
                    },
                    "layout": {
                        "column": 1,
                        "row": 4,
                        "height": 3,
                        "width": 4
                    },
                    "title": "Throttled Requests",
                    "rawConfiguration": {
                        "nrqlQueries": [
                            {
                                "accountId": 0,
                                "query": "SELECT sum(`aws.dynamodb.WriteThrottleEvents`) as 'Write', sum(`aws.dynamodb.ReadThrottleEvents`) as 'Read' FROM Metric WHERE collector.name='cloudwatch-metric-streams' since 1 hour ago"
                            }
                        ]
                    }
                },
                {
                    "visualization": {
                        "id": "viz.line"
                    },
                    "layout": {
                        "column": 5,
                        "row": 4,
                        "height": 3,
                        "width": 4
                    },
                    "title": "User Errors",
                    "rawConfiguration": {
                        "nrqlQueries": [
                            {
                                "accountId": 0,
                                "query": "SELECT sum(`aws.dynamodb.UserErrors`) FROM Metric WHERE collector.name='cloudwatch-metric-streams' TIMESERIES since 6 hours ago"
                            }
                        ]
                    }
                },
                {
                    "visualization": {
                        "id": "viz.line"
                    },
                    "layout": {
                        "column": 1,
                        "row": 7,
                        "height": 3,
                        "width": 8
                    },
                    "title": "% of provisioned read consumed",
                    "rawConfiguration": {
                        "nrqlQueries": [
                            {
                                "accountId": 0,
                                "query": "SELECT average(`aws.dynamodb.ConsumedReadCapacityUnits` / (`aws.dynamodb.ProvisionedReadCapacityUnits` * 60 * 5)) * 100 as 'provisioned read consumed' FROM Metric WHERE collector.name='cloudwatch-metric-streams' since 1 day ago timeseries 30 minutes"
                            }
                        ]
                    }
                },
                {
                    "visualization": {
                        "id": "viz.line"
                    },
                    "layout": {
                        "column": 9,
                        "row": 7,
                        "height": 3,
                        "width": 4
                    },
                    "title": "% of provisioned write consumed",
                    "rawConfiguration": {
                        "nrqlQueries": [
                            {
                                "accountId": 0,
                                "query": "SELECT average(`aws.dynamodb.ConsumedWriteCapacityUnits` / (`aws.dynamodb.ProvisionedWriteCapacityUnits` * 60 * 5)) * 100 as 'provisioned write consumed' FROM Metric WHERE collector.name='cloudwatch-metric-streams' since 1 day ago timeseries 30 minutes"
                            }
                        ]
                    }
                },
                {
                    "visualization": {
                        "id": "viz.line"
                    },
                    "layout": {
                        "column": 1,
                        "row": 10,
                        "height": 3,
                        "width": 4
                    },
                    "title": "System Errors",
                    "rawConfiguration": {
                        "nrqlQueries": [
                            {
                                "accountId": 0,
                                "query": "SELECT sum(`aws.dynamodb.ScanSystemErrors`) + sum(`aws.dynamodb.QuerySystemErrors`) + sum(`aws.dynamodb.DeleteSystemErrors`) + sum(`aws.dynamodb.updateSystemErrors`) + sum(`aws.dynamodb.updateSystemErrors`) + sum(`aws.dynamodb.batchWriteSystemErrors`) + sum(`aws.dynamodb.batchGetSystemErrors`) + sum(`aws.dynamodb.getSystemErrors`) as SystemErrors FROM Metric WHERE collector.name='cloudwatch-metric-streams' TIMESERIES since 6 hours ago"
                            }
                        ]
                    }
                },
                {
                    "visualization": {
                        "id": "viz.line"
                    },
                    "layout": {
                        "column": 5,
                        "row": 10,
                        "height": 3,
                        "width": 4
                    },
                    "title": "Read Throttled Requests, by Table",
                    "rawConfiguration": {
                        "nrqlQueries": [
                            {
                                "accountId": 0,
                                "query": "SELECT average(`aws.dynamodb.ReadThrottleEvents.byTable`) as 'Read Throttled Requests' FROM Metric WHERE collector.name='cloudwatch-metric-streams' since 6 hours ago facet `aws.dynamodb.TableName` TIMESERIES 5 minutes"
                            }
                        ]
                    }
                },
                {
                    "visualization": {
                        "id": "viz.line"
                    },
                    "layout": {
                        "column": 9,
                        "row": 10,
                        "height": 3,
                        "width": 4
                    },
                    "title": "Write Throttled Requests, by Table",
                    "rawConfiguration": {
                        "nrqlQueries": [
                            {
                                "accountId": 0,
                                "query": "SELECT average(`aws.dynamodb.WriteThrottleEvents.byTable`) as 'Write Throttled Requests' FROM Metric WHERE collector.name='cloudwatch-metric-streams' since 6 hours ago facet `aws.dynamodb.TableName` TIMESERIES 5 minutes"
                            }
                        ]
                    }
                },
                {
                    "visualization": {
                        "id": "viz.area"
                    },
                    "layout": {
                        "column": 1,
                        "row": 13,
                        "height": 3,
                        "width": 4
                    },
                    "title": "Pending Replication Count, by Table",
                    "rawConfiguration": {
                        "nrqlQueries": [
                            {
                                "accountId": 0,
                                "query": "SELECT average(`aws.dynamodb.PendingReplicationCount`) FROM Metric WHERE collector.name='cloudwatch-metric-streams' TIMESERIES auto FACET `aws.dynamodb.TableName` UNTIL 5 minutes ago"
                            }
                        ]
                    }
                },
                {
                    "visualization": {
                        "id": "viz.area"
                    },
                    "layout": {
                        "column": 5,
                        "row": 13,
                        "height": 3,
                        "width": 8
                    },
                    "title": "Replication Latency (millis), by Table",
                    "rawConfiguration": {
                        "nrqlQueries": [
                            {
                                "accountId": 0,
                                "query": "SELECT average(`aws.dynamodb.ReplicationLatency`) FROM Metric WHERE collector.name='cloudwatch-metric-streams' TIMESERIES auto FACET `aws.dynamodb.TableName` UNTIL 5 minutes ago"
                            }
                        ]
                    }
                }
            ]
        }
    ],
    "name": "AWS DynamoDB",
    "description": ""
}